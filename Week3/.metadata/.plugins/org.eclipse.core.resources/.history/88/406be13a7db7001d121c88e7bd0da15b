package fileHandling;

import java.sql.*;
public class StudentAppClass {
	
	private static final String userName = "postgres";
	private static final String password = "pg123";
	private static final String dbName = "bptn";
	private static final String port = "5432";
	private static final String dbUrl = "localhost";
	
	//A method that create a Connection object, which will represent a physical connection with your database.
	//it returns the connection
	public Connection CreateConnection() {
		Connection conn = null;
		try {
	        // These lines load the postgresql driver, then initialize it with the variables we defined above:
		      Class.forName("org.postgresql.Driver");
		      conn = DriverManager
		        .getConnection("jdbc:postgresql://" + dbUrl + ":" + port + "/" + dbName,
		          userName, password);
		    } catch (Exception e) {
		      System.out.println(e.getClass().getName() + ": " + e.getMessage());
		      System.exit(0);
		    }
		 System.out.println("Opened database successfully");
		 return conn;
		
	}
	
	// Here, we define a function that will make use of the connection we've created above:
	  public void GetAllStudents(Connection conn) {
	    try {
	      Statement stmt = null;
	      stmt = conn.createStatement();
	        // This line is our SQL statement to select all entries from the student table:
	      String sql = "SELECT * FROM students";
	        // This line executes the query:
	      ResultSet rs = stmt.executeQuery(sql);
	        // While there is data in the returned result set, we will print that line to the console:
	      while (rs.next()) {
	        // Retrieve by column name
	        System.out.print("Student ID: " + rs.getInt("studentId"));
	        System.out.print(", Course ID: " + rs.getInt("courseId"));
	        System.out.print(", Student Name: " + rs.getString("studentName"));
	        System.out.print(", Student Email: " + rs.getString("studentEmail"));
	        System.out.println(", Student Phone: " + rs.getInt("studentPhone"));
	      }
	        // Here, we close our connection:
	      stmt.close();
	    } catch (SQLException ex) {
	      // And of course, we handle exceptions in case our query is unsuccessful: 
	      System.out.println("Exception:" + ex.getMessage());
	    }
	  }

}